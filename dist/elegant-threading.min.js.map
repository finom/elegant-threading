{"version":3,"sources":["webpack://elegantThreading/webpack/universalModuleDefinition","webpack://elegantThreading/webpack/bootstrap","webpack://elegantThreading/./src/helpers.js","webpack://elegantThreading/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://elegantThreading/./src/index.js","webpack://elegantThreading/./src/browserThreading.js","webpack://elegantThreading/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://elegantThreading/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://elegantThreading/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://elegantThreading/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://elegantThreading/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://elegantThreading/./src/nodeThreading.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getError","Error","TERMINATED","EXPORT_FUNCTION_DECLARATION","TRANSFERABLE_ARRAY","SET_IS_TERMINATED","workerSymbol","stringifyExpored","exported","map","func","stringified","toString","match","join","stringifySource","source","getSourceFunctionName","arr","len","length","arr2","Array","browserThreading","require","nodeThreading","elegantThreading","imports","threadedFunction","Worker","fork","callWithTransferable","transferableList","__transferableList","message","worker","__isTerminated","configurable","set","terminate","id","Blob","URL","createObjectURL","type","Promise","resolve","reject","currentId","onMessage","data","removeEventListener","onError","error","assign","result","console","method","args","e","addEventListener","postMessage","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayLikeToArray","isArray","iter","iterator","from","minLen","slice","constructor","test","TypeError","eval","symbols","getOwnPropertySymbols","kHandleSymbol","find","description","kHandle","unref","off","ref","on"],"mappings":"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","file":"elegant-threading.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"elegantThreading\"] = factory();\n\telse\n\t\troot[\"elegantThreading\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","const defaultMainFunctionName = 'anonymous0';\n\nfunction getError(name) {\n  return new Error(`Threading error: ${{\n    TERMINATED: 'Cannot call threaded function because its worker was terminated',\n    EXPORT_FUNCTION_DECLARATION: 'Exported functions need to be defined as function declaration',\n    TRANSFERABLE_ARRAY: 'Transferable items must be an array',\n    SET_IS_TERMINATED: 'threadedFunction.isTerminated cannot be set',\n  }[name]}` || 'Unknown error');\n}\n\nfunction stringifyExpored(exported = []) {\n  return `${exported.map((func) => {\n    const stringified = func.toString();\n    if (!stringified.match(/function\\s*\\w+\\s*\\([\\s\\S]+/)) {\n      throw getError('EXPORT_FUNCTION_DECLARATION');\n    }\n    return stringified;\n  }).join(';\\n')};\\n`;\n}\n\nfunction stringifySource(source) {\n  return source.name ? source.toString() : `const ${defaultMainFunctionName} = ${source.toString()};`;\n}\n\nfunction getSourceFunctionName(source) {\n  return source.name || defaultMainFunctionName;\n}\n\nconst workerSymbol = Symbol('worker');\n\nmodule.exports = {\n  stringifyExpored, stringifySource, getError, getSourceFunctionName, workerSymbol,\n};\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const browserThreading = require('./browserThreading');\nconst nodeThreading = require('./nodeThreading');\nconst { getError, workerSymbol } = require('./helpers');\n\nfunction elegantThreading(source, imports) {\n  let threadedFunction;\n  if (typeof window !== 'undefined' && typeof window.Worker === 'function') {\n    threadedFunction = browserThreading(source, imports);\n  } else {\n    threadedFunction = nodeThreading(source, imports);\n  }\n\n  // calculateHeavyThing.fork()(...args)\n  threadedFunction.fork = () => elegantThreading(source, imports);\n\n  threadedFunction.callWithTransferable = function callWithTransferable(\n    transferableList, ...message\n  ) {\n    if (!(transferableList instanceof Array)) {\n      throw getError('TRANSFERABLE_ARRAY');\n    }\n    threadedFunction.__transferableList = transferableList;\n    return threadedFunction(...message);\n  };\n\n  const worker = threadedFunction[workerSymbol];\n\n  worker.__isTerminated = false;\n\n  Object.defineProperty(threadedFunction, 'isTerminated', {\n    configurable: false,\n    get: () => worker.__isTerminated,\n    set: () => { throw getError('SET_IS_TERMINATED'); },\n  });\n\n  threadedFunction.terminate = () => {\n    worker.__isTerminated = true;\n    worker.terminate();\n  };\n\n  return threadedFunction;\n}\n\nmodule.exports = elegantThreading;\n","const {\n  stringifyExpored, stringifySource, getError, getSourceFunctionName, workerSymbol,\n} = require('./helpers');\n\nlet id = 0;\nfunction browserThreading(source, exported) {\n  const { Blob, URL, Worker } = window;\n\n  const worker = new Worker(URL.createObjectURL(\n    new Blob([`${stringifySource(source)}\n      ${stringifyExpored(exported)}\n\n      let latestId0;\n\n      function callConsole0(method, args) {\n        try {\n          postMessage({ type: 'console', method: method, args: [].slice.call(args), id: latestId0 });\n        } catch(e) {\n          postMessage({ type: 'call', error: {\n            name: e.name,\n            stack: e.stack,\n            message: e.message,\n            lineNumber: e.lineNumber,\n            columnNumber: e.columnNumber,\n          }, id: latestId0 });\n        }\n      }\n\n      const consoleMethods0 = ['log', 'info', 'error', 'warn', 'clear', 'time', 'timeEnd', 'table', 'count', 'group', 'groupEnd'];\n      const console = {};\n\n      for(let i0 = 0; i0 < consoleMethods0.length; i0++) {\n        console[consoleMethods0[i0]] = function() { callConsole0(consoleMethods0[i0], arguments) }\n      }\n\n      onmessage = function(e) {\n        let result, error;\n        latestId0 = e.data.id;\n        try { result = ${getSourceFunctionName(source)}.apply(this, e.data.message) } catch(e) { error = {\n          name: e.name,\n          stack: e.stack,\n          message: e.message,\n          lineNumber: e.lineNumber,\n          columnNumber: e.columnNumber,\n        }; }\n\n        Promise.resolve(result).then(function(promiseResult) {\n          postMessage({\n            type: 'call',\n            result: promiseResult,\n            error: error,\n            id: e.data.id,\n            transferableList: e.data.transferableList,\n          }, e.data.transferableList || []);\n        })\n        \n      }\n    `], { type: 'text/javascript' }),\n  ));\n\n  const threadedFunction = (...message) => {\n    const transferableList = threadedFunction.__transferableList;\n    delete threadedFunction.__transferableList;\n\n    return new Promise((resolve, reject) => {\n      if (worker.__isTerminated) throw getError('TERMINATED');\n      const currentId = id++;\n      const onMessage = ({ data }) => {\n        if (data.id === currentId) {\n          if (data.type === 'call') {\n            worker.removeEventListener('message', onMessage);\n            worker.removeEventListener('error', onError); // eslint-disable-line no-use-before-define\n            if (data.error) {\n              reject(Object.assign(Object.create(Error.prototype), data.error));\n            } else {\n              resolve(data.result);\n            }\n          } else if (data.type === 'console') {\n          // eslint-disable-next-line no-console\n            console[data.method](...data.args);\n          }\n        }\n      };\n\n      const onError = (e) => {\n        worker.removeEventListener('message', onMessage);\n        worker.removeEventListener('error', onError);\n        reject(e);\n      };\n\n      worker.addEventListener('message', onMessage);\n      worker.addEventListener('error', onError);\n      worker.postMessage({ message, id: currentId, transferableList }, transferableList);\n    });\n  };\n\n  threadedFunction[workerSymbol] = worker;\n\n  return threadedFunction;\n}\n\nmodule.exports = browserThreading;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","const {\n  stringifyExpored, stringifySource, getError, getSourceFunctionName, workerSymbol,\n} = require('./helpers');\n\nlet id = 0;\nfunction nodeThreading(source, exported) {\n  // eval is used to get \"require\" function but it should be invisible for bundlers like Webpack\n  const { Worker } = eval('require')('worker_threads'); // eslint-disable-line no-eval\n  const worker = new Worker(\n    `${stringifySource(source)}\n    ${stringifyExpored(exported)}\n      const { parentPort, MessageChannel } = require('worker_threads');\n\n      parentPort.on('message', function(data0) {\n        const result = ${getSourceFunctionName(source)}.apply(this, data0.message);\n\n        Promise.resolve(result).then((promiseResult) => {\n          parentPort.postMessage({\n            result: promiseResult,\n            id: data0.id,\n            transferableList: data0.transferableList,\n          }, data0.transferableList || []);\n        });\n      });\n\n    `,\n    { eval: true },\n  );\n\n  const symbols = Object.getOwnPropertySymbols(worker);\n  const kHandleSymbol = symbols.find(({ description }) => description === 'kHandle');\n  const kHandle = worker[kHandleSymbol];\n\n  const threadedFunction = (...message) => {\n    const transferableList = threadedFunction.__transferableList;\n    delete threadedFunction.__transferableList;\n    return new Promise((resolve, reject) => {\n      if (worker.__isTerminated) throw getError('TERMINATED');\n      const currentId = id++;\n      const onMessage = (data) => {\n        if (data.id === currentId) {\n          kHandle.unref();\n          worker.off('message', onMessage);\n          worker.off('message', onError); // eslint-disable-line no-use-before-define\n          resolve(data.result);\n        }\n      };\n\n      const onError = (e) => {\n        kHandle.unref();\n        worker.off('message', onMessage);\n        worker.off('message', onError);\n        reject(e);\n      };\n\n      kHandle.ref();\n      worker.on('message', onMessage);\n      worker.on('error', onError);\n      worker.postMessage({ message, id: currentId, transferableList }, transferableList || []);\n    });\n  };\n\n  threadedFunction[workerSymbol] = worker;\n\n  return threadedFunction;\n}\n\nmodule.exports = nodeThreading;\n"],"sourceRoot":""}
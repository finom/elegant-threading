/*!
 * elegant-threading v0.2.0 (Tue, 04 Aug 2020 19:57:32 GMT)
 * Made by Andrey Gubanov http://github.com/finom
 * Released under the MIT license
 * More info: https://github.com/finom/elegant-threading
 */
!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports.elegantThreading=r():e.elegantThreading=r()}(window,(function(){return function(e){var r={};function n(t){if(r[t])return r[t].exports;var o=r[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=r,n.d=function(e,r,t){n.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,r){if(1&r&&(e=n(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)n.d(t,o,function(r){return e[r]}.bind(null,o));return t},n.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(r,"a",r),r},n.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},n.p="",n(n.s=2)}([function(e,r,n){"use strict";function t(e){return new Error("Threading error: ".concat({TERMINATED:"Cannot call threaded function because its worker was terminated",EXPORT_FUNCTION_DECLARATION:"Exported functions need to be defined as function declaration",TRANSFERABLE_ARRAY:"Transferable items must be an array",SET_IS_TERMINATED:"threadedFunction.isTerminated cannot be set"}[e])||!1)}var o=Symbol("worker");e.exports={stringifyExpored:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return"".concat(e.map((function(e){var r=e.toString();if(!r.match(/function\s*\w+\s*\([\s\S]+/))throw t("EXPORT_FUNCTION_DECLARATION");return r})).join(";\n"),";\n")},stringifySource:function(e){return e.name?e.toString():"const ".concat("anonymous0"," = ").concat(e.toString(),";")},getError:t,getSourceFunctionName:function(e){return e.name||"anonymous0"},workerSymbol:o}},function(e,r){e.exports=function(e,r){(null==r||r>e.length)&&(r=e.length);for(var n=0,t=new Array(r);n<r;n++)t[n]=e[n];return t}},function(e,r,n){"use strict";var t=n(3),o=n(9),a=n(0),i=a.getError,s=a.workerSymbol;e.exports=function e(r,n){var a;(a="undefined"!=typeof window&&"function"==typeof window.Worker?t(r,n):o(r,n)).fork=function(){return e(r,n)},a.callWithTransferable=function(e){if(!(e instanceof Array))throw i("TRANSFERABLE_ARRAY");a.__transferableList=e;for(var r=arguments.length,n=new Array(r>1?r-1:0),t=1;t<r;t++)n[t-1]=arguments[t];return a.apply(void 0,n)};var u=a[s];return u.__isTerminated=!1,Object.defineProperty(a,"isTerminated",{configurable:!1,get:function(){return u.__isTerminated},set:function(){throw i("SET_IS_TERMINATED")}}),a.terminate=function(){u.__isTerminated=!0,u.terminate()},a}},function(e,r,n){"use strict";var t=n(4),o=n(0),a=o.stringifyExpored,i=o.stringifySource,s=o.getError,u=o.getSourceFunctionName,c=o.workerSymbol,l=0;e.exports=function(e,r){var n=window,o=n.Blob,f=n.URL,d=new(0,n.Worker)(f.createObjectURL(new o(["".concat(i(e),"\n      ").concat(a(r),"\n\n      let latestId0;\n\n      function callConsole0(method, args) {\n        try {\n          postMessage({ type: 'console', method: method, args: [].slice.call(args), id: latestId0 });\n        } catch(e) {\n          postMessage({ type: 'call', error: {\n            name: e.name,\n            stack: e.stack,\n            message: e.message,\n            lineNumber: e.lineNumber,\n            columnNumber: e.columnNumber,\n          }, id: latestId0 });\n        }\n      }\n\n      const consoleMethods0 = ['log', 'info', 'error', 'warn', 'clear', 'time', 'timeEnd', 'table', 'count', 'group', 'groupEnd'];\n      const console = {};\n\n      for(let i0 = 0; i0 < consoleMethods0.length; i0++) {\n        console[consoleMethods0[i0]] = function() { callConsole0(consoleMethods0[i0], arguments) }\n      }\n\n      onmessage = function(e) {\n        let result, error;\n        latestId0 = e.data.id;\n        try { result = ").concat(u(e),".apply(this, e.data.message) } catch(e) { error = {\n          name: e.name,\n          stack: e.stack,\n          message: e.message,\n          lineNumber: e.lineNumber,\n          columnNumber: e.columnNumber,\n        }; }\n\n        Promise.resolve(result).then(function(promiseResult) {\n          postMessage({\n            type: 'call',\n            result: promiseResult,\n            error: error,\n            id: e.data.id,\n            transferableList: e.data.transferableList,\n          }, e.data.transferableList || []);\n        })\n        \n      }\n    ")],{type:"text/javascript"}))),m=function e(){for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];var a=e.__transferableList;return delete e.__transferableList,new Promise((function(e,r){if(d.__isTerminated)throw s("TERMINATED");var o=l++,i=function n(a){var i=a.data;if(i.id===o)if("call"===i.type)d.removeEventListener("message",n),d.removeEventListener("error",u),i.error?r(Object.assign(Object.create(Error.prototype),i.error)):e(i.result);else if("console"===i.type){var s;(s=console)[i.method].apply(s,t(i.args))}},u=function e(n){d.removeEventListener("message",i),d.removeEventListener("error",e),r(n)};d.addEventListener("message",i),d.addEventListener("error",u),d.postMessage({message:n,id:o,transferableList:a},a)}))};return m[c]=d,m}},function(e,r,n){var t=n(5),o=n(6),a=n(7),i=n(8);e.exports=function(e){return t(e)||o(e)||a(e)||i()}},function(e,r,n){var t=n(1);e.exports=function(e){if(Array.isArray(e))return t(e)}},function(e,r){e.exports=function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}},function(e,r,n){var t=n(1);e.exports=function(e,r){if(e){if("string"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}},function(e,r){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},function(module,exports,__webpack_require__){"use strict";var _require=__webpack_require__(0),stringifyExpored=_require.stringifyExpored,stringifySource=_require.stringifySource,getError=_require.getError,getSourceFunctionName=_require.getSourceFunctionName,workerSymbol=_require.workerSymbol,id=0;function nodeThreading(source,exported){var _eval=eval("require")("worker_threads"),Worker=_eval.Worker,worker=new Worker("".concat(stringifySource(source),"\n    ").concat(stringifyExpored(exported),"\n      const { parentPort, MessageChannel } = require('worker_threads');\n\n      parentPort.on('message', function(data0) {\n        const result = ").concat(getSourceFunctionName(source),".apply(this, data0.message);\n\n        Promise.resolve(result).then((promiseResult) => {\n          parentPort.postMessage({\n            result: promiseResult,\n            id: data0.id,\n            transferableList: data0.transferableList,\n          }, data0.transferableList || []);\n        });\n      });\n\n    "),{eval:!0}),symbols=Object.getOwnPropertySymbols(worker),kHandleSymbol=symbols.find((function(e){return"kHandle"===e.description})),kHandle=worker[kHandleSymbol],threadedFunction=function e(){for(var r=arguments.length,n=new Array(r),t=0;t<r;t++)n[t]=arguments[t];var o=e.__transferableList;return delete e.__transferableList,new Promise((function(e,r){if(worker.__isTerminated)throw getError("TERMINATED");var t=id++,a=function r(n){n.id===t&&(kHandle.unref(),worker.off("message",r),worker.off("message",i),e(n.result))},i=function e(n){kHandle.unref(),worker.off("message",a),worker.off("message",e),r(n)};kHandle.ref(),worker.on("message",a),worker.on("error",i),worker.postMessage({message:n,id:t,transferableList:o},o||[])}))};return threadedFunction[workerSymbol]=worker,threadedFunction}module.exports=nodeThreading}])}));
//# sourceMappingURL=elegant-threading.min.js.map